name: Push rapidocr_openvino to pypi

on:
  push:
    branches: [ main ]
    paths:
      - 'python/rapidocr_openvino/**'
      - 'docs/doc_whl_rapidocr_vino.md'
      - 'python/setup_openvino.py'
      - '.github/workflows/gen_whl_to_pypi_rapidocr_vino.yml'
      - 'python/requirements_vino.txt'


env:
  RESOURCES_URL: https://github.com/RapidAI/RapidOCR/releases/download/v1.1.0/required_for_whl_v1.3.0.zip

jobs:
  UnitTesting:
    runs-on: ubuntu-latest
    steps:
      - name: Pull latest code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Unit testings
        run: |
          wget $RESOURCES_URL
          ZIP_NAME=${RESOURCES_URL##*/}
          DIR_NAME=${ZIP_NAME%.*}
          unzip $DIR_NAME
          cp $DIR_NAME/resources/models/*.onnx python/rapidocr_openvino/models/
          cd python
          pip install -r requirements_vino.txt
          pip install pytest wheel get_pypi_latest_version onnxruntime
          cd tests
          pytest test_vino.py

  GenerateWHL_PushPyPi:
    needs: UnitTesting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Download models
        run: |
          cd python
          wget $RESOURCES_URL
          ZIP_NAME=${RESOURCES_URL##*/}
          DIR_NAME=${ZIP_NAME%.*}
          unzip $ZIP_NAME
          cp $DIR_NAME/resources/models/*.onnx rapidocr_openvino/models

      - name: Run setup_openvino.py
        run: |
          cd python
          pip install setuptools get_pypi_latest_version wheel
          mkdir rapidocr_openvino_t
          mv rapidocr_openvino rapidocr_openvino_t
          mv rapidocr_openvino_t rapidocr_openvino
          cd rapidocr_openvino
          echo "from .rapidocr_openvino.main import RapidOCR, VisRes" > __init__.py

          cd ..
          python -m pip install --upgrade pip
          python setup_openvino.py bdist_wheel "${{ github.event.head_commit.message }}"
          mv dist ../

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.RAPIDOCR_OPENVINO }}
          packages_dir: dist/
